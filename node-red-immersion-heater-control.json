[
    {
        "id": "04078e243164b50e",
        "type": "subflow",
        "name": "GivEnergy Rest API",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 80,
                "wires": [
                    {
                        "id": "ef55abe0d3f0c829"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1540,
                "y": 80,
                "wires": [
                    {
                        "id": "09b153513016bac8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1680,
            "y": 180,
            "wires": [
                {
                    "id": "2fb2ed2e04729f28",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "2bf0990f0653e0ac",
        "type": "function",
        "z": "04078e243164b50e",
        "name": "Create url",
        "func": "msg.headers.Authorization= \"Bearer \" + global.get(\"GivEnergyApiKey\");\n\nmsg.url = global.get(\"GivEnergyAPIURL\") + msg.apiCall;\n\n//params are added automatically\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 80,
        "wires": [
            [
                "09b153513016bac8"
            ]
        ]
    },
    {
        "id": "09b153513016bac8",
        "type": "http request",
        "z": "04078e243164b50e",
        "name": "Make the Call",
        "method": "use",
        "ret": "obj",
        "paytoqs": "body",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1370,
        "y": 80,
        "wires": [
            [
                "2fb2ed2e04729f28"
            ]
        ]
    },
    {
        "id": "f608f24dc8a16592",
        "type": "change",
        "z": "04078e243164b50e",
        "name": "Set Params in payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "params",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 80,
        "wires": [
            [
                "2bf0990f0653e0ac"
            ]
        ]
    },
    {
        "id": "ef55abe0d3f0c829",
        "type": "change",
        "z": "04078e243164b50e",
        "name": "payload {}",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 80,
        "wires": [
            [
                "0ca2908ce86ce2cd"
            ]
        ]
    },
    {
        "id": "0ca2908ce86ce2cd",
        "type": "change",
        "z": "04078e243164b50e",
        "name": "Set Headers {}",
        "rules": [
            {
                "t": "set",
                "p": "headers",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 80,
        "wires": [
            [
                "49947bd9e2ed703b"
            ]
        ]
    },
    {
        "id": "49947bd9e2ed703b",
        "type": "change",
        "z": "04078e243164b50e",
        "name": "content-type",
        "rules": [
            {
                "t": "set",
                "p": "headers.content-type",
                "pt": "msg",
                "to": "application/json",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 80,
        "wires": [
            [
                "f608f24dc8a16592"
            ]
        ]
    },
    {
        "id": "2fb2ed2e04729f28",
        "type": "function",
        "z": "04078e243164b50e",
        "name": "",
        "func": "var statusMsg;\nif (msg.statusCode==200 || msg.statusCode==201) \n{\n    statusMsg = { fill:\"green\", shape:\"dot\", text:\"Call successful\" };\n} else\n{\n    statusMsg = { fill:\"red\", shape:\"dot\", text:\"Call failed\" };\n}\n\nmsg.payload= statusMsg;\nmsg.payload.topic = \"solar\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1540,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "07b8b9c1ab058a4b",
        "type": "tab",
        "label": "GivEnergy API - Home Assistant",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "67c3660acbc48e1f",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "Latest GE data",
        "rules": [
            {
                "t": "set",
                "p": "apiCall",
                "pt": "msg",
                "to": "inverter/CE2131G090/system-data/latest",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "01fa4ac995a5fa6d"
            ]
        ]
    },
    {
        "id": "ecce20f441b03b74",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "props": [],
        "repeat": "300",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "edef4452192973fc"
            ]
        ]
    },
    {
        "id": "01fa4ac995a5fa6d",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "GET",
        "rules": [
            {
                "t": "set",
                "p": "method",
                "pt": "msg",
                "to": "GET",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 300,
        "wires": [
            [
                "0c90b3f6301991af"
            ]
        ]
    },
    {
        "id": "a63f74ca05dbd3e1",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "API Key",
        "props": [
            {
                "p": "payload.apiKey",
                "v": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiI5NTc3MDIxOS1jYWE2LTRmOTctOTE3Ni0zNDBlZGMzZDQxNTgiLCJqdGkiOiI1NzE0OTdmMmExZDMwODk5YjU0YjJmMzZmMTliMTlhMzI4YzUzMTU2OWU4ZTJkNjZlYmY5ZmYwZmQ5NGU2MGVkMTU2NWVjZWY4YWIwNDZhYSIsImlhdCI6MTY1ODk5NzgyMS45MjgyNjcsIm5iZiI6MTY1ODk5NzgyMS45MjgyNzEsImV4cCI6MTY5MDUzMzgyMS45MjMzNjUsInN1YiI6IjY3NzYiLCJzY29wZXMiOlsiYXBpIl19.zroeTPEeRREyuQujQv92pm-1kEMQ6ReetGbxtqx1K5nZxJIPrMkMuLl5nRH6F2bOUDn7Tlx-wHvZbDEOyyHpVg",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 160,
        "y": 120,
        "wires": [
            [
                "06c6c79fa454123c"
            ]
        ]
    },
    {
        "id": "06c6c79fa454123c",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "Set apiKey",
        "rules": [
            {
                "t": "set",
                "p": "GivEnergyApiKey",
                "pt": "global",
                "to": "payload.apiKey",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "0fa0032f080b353c",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "https://api.givenergy.cloud/v1/",
        "props": [
            {
                "p": "url",
                "v": "https://api.givenergy.cloud/v1/",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 220,
        "y": 160,
        "wires": [
            [
                "ea4ce4544c9fdb84"
            ]
        ]
    },
    {
        "id": "ea4ce4544c9fdb84",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "Set URL",
        "rules": [
            {
                "t": "set",
                "p": "GivEnergyAPIURL",
                "pt": "global",
                "to": "url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "c907db1a631f577c",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "Step 1 - Set API and URL ( add your API keys as required )",
        "info": "",
        "x": 310,
        "y": 40,
        "wires": []
    },
    {
        "id": "a757a1826706e568",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "Step 2 - Set power level, depending on dual-switch on immersion",
        "info": "",
        "x": 830,
        "y": 80,
        "wires": []
    },
    {
        "id": "a7d9b2846e6d5a44",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "Step 3a - Query APIs ( optionally view output in debug window )",
        "info": "",
        "x": 330,
        "y": 240,
        "wires": []
    },
    {
        "id": "b66c36cee7a300e4",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "GE API output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.data",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1240,
        "y": 300,
        "wires": []
    },
    {
        "id": "3b53fd1b624a5183",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Create forecast energy",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 860,
        "wires": []
    },
    {
        "id": "66e33d5587ddd5d4",
        "type": "function",
        "z": "07b8b9c1ab058a4b",
        "name": "Extract GE data",
        "func": "var batteryData = msg.payload.data\nvar gridPower = batteryData.grid.power\nvar SoC = batteryData.battery.percent\nvar solarPower = batteryData.solar.power\nvar inverterPower = batteryData.inverter.power\nvar load = batteryData.consumption\nvar forecastEnergy = msg.payload.result[msg.date.nextHour] - msg.payload.result[msg.date.now]\nvar newMsg = { load, gridPower, SoC, solarPower, forecastEnergy, inverterPower }\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 780,
        "wires": [
            [
                "3b53fd1b624a5183",
                "0d84438b10421337",
                "3257a93cb2eba438"
            ]
        ]
    },
    {
        "id": "0d84438b10421337",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "Immersion on or off?",
        "property": "immersion",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 440,
        "y": 800,
        "wires": [
            [
                "0953f876a07f0bb7"
            ],
            [
                "17ca43154051aeb8"
            ],
            [
                "307edd7fbd63d915"
            ]
        ]
    },
    {
        "id": "661069883157c5d8",
        "type": "api-call-service",
        "z": "07b8b9c1ab058a4b",
        "name": "Turn immersion on",
        "server": "9abb00aef19ebed9",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "mobile_app_g8441",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"Turning immersion on\",\"data\":{\"type\":\"announce\"},\"target\":\"mobile_app_g8441\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1490,
        "y": 700,
        "wires": [
            [
                "d9b434a4d617f95c"
            ]
        ]
    },
    {
        "id": "958bc17db8e465a5",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Forecast data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.result",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 420,
        "wires": []
    },
    {
        "id": "968b84a11c2b83e0",
        "type": "json",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 770,
        "y": 380,
        "wires": [
            [
                "958bc17db8e465a5",
                "3c7b1fa9304d4c26"
            ]
        ]
    },
    {
        "id": "b9d9bc33bf4d92c6",
        "type": "http request",
        "z": "07b8b9c1ab058a4b",
        "name": "Solar forecast",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.forecast.solar/3529083a989ab18e/estimate/watthours/52/0/25/0/3",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 380,
        "y": 420,
        "wires": [
            [
                "4a81410923b29a98"
            ]
        ]
    },
    {
        "id": "6b9aa19e9e75d558",
        "type": "moment",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Europe/London",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DD HH:MM:SS",
        "locale": "en-GB",
        "output": "date",
        "outputType": "msg",
        "outTz": "Europe/London",
        "x": 700,
        "y": 560,
        "wires": [
            [
                "a5d85cfb6c4aae43"
            ]
        ]
    },
    {
        "id": "d662657d187e695a",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Forecast hour",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 560,
        "wires": []
    },
    {
        "id": "a5d85cfb6c4aae43",
        "type": "function",
        "z": "07b8b9c1ab058a4b",
        "name": "Find the next hour for forecast",
        "func": "var date = msg.date.split(\" \")[0]\nvar time = msg.date.split(\" \")[1]\nvar hour = Number(time.split(\":\")[0])\nvar half = Number(time.split(\":\")[1])\nvar halfStr = \"\"\nif (half < 30) {\n    halfStr = \":00:00\"\n} else {\n    halfStr = \":30:00\"\n}\nvar nextHour = hour + 1\nvar leadingZeroNow = \"\"\nvar leadingZeroNext = \"\"\nif (Number(hour) < 10) {\n    leadingZeroNow = \"0\"\n}\nif (Number(nextHour) < 10) {\n    leadingZeroNext = \"0\"\n}\nvar nowStr = date + \" \" + leadingZeroNow + hour + halfStr\nvar nextHourStr = date + \" \" + leadingZeroNext + nextHour + halfStr\nreturn {...msg,  date: { now: nowStr, nextHour: nextHourStr } };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 560,
        "wires": [
            [
                "d662657d187e695a",
                "66e33d5587ddd5d4"
            ]
        ]
    },
    {
        "id": "aaa647d065064d73",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Combined data",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 600,
        "wires": []
    },
    {
        "id": "5e8648ed17c470be",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "Enough solar for recharge?",
        "property": "forecastEnergy",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "powerDemand",
                "vt": "flow"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 820,
        "y": 720,
        "wires": [
            [
                "9ca850e36b147615"
            ],
            [
                "a3f16b7807bc7bca"
            ]
        ]
    },
    {
        "id": "a3f16b7807bc7bca",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Not enough solar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "forecastEnergy",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 800,
        "wires": []
    },
    {
        "id": "17ca43154051aeb8",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "Immersion finished heating?",
        "property": "load",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "2800",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 820,
        "y": 860,
        "wires": [
            [
                "83ed4f1217dca428"
            ],
            [
                "5e3e187dc22ab22b"
            ]
        ]
    },
    {
        "id": "48d78eb1485299e5",
        "type": "api-call-service",
        "z": "07b8b9c1ab058a4b",
        "name": "Turn off immersion",
        "server": "9abb00aef19ebed9",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "mobile_app_g8441",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"Turning off immersion\",\"data\":{\"type\":\"announce\"},\"target\":\"mobile_app_g8441\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1310,
        "y": 860,
        "wires": [
            [
                "36b4a319115a6fbe"
            ]
        ]
    },
    {
        "id": "76dfa1a833b4f98f",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "If immersion was previously on and now inverter load is < 2,000 then assume water heating has stopped",
        "info": "",
        "x": 970,
        "y": 920,
        "wires": []
    },
    {
        "id": "b3157fe841130662",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "At least hour since last 'on' phase AND more than flow.powerDemand kWh forecast in next hour?",
        "info": "",
        "x": 1030,
        "y": 760,
        "wires": []
    },
    {
        "id": "d92eaf637e79542e",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "Step 3b - Process solar energy forecast data",
        "info": "",
        "x": 270,
        "y": 500,
        "wires": []
    },
    {
        "id": "5f8f6f1e8988c082",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "Step 3c - Check SoC and decide if immersion should be on or off",
        "info": "",
        "x": 330,
        "y": 660,
        "wires": []
    },
    {
        "id": "d9b434a4d617f95c",
        "type": "api-call-service",
        "z": "07b8b9c1ab058a4b",
        "name": "Turn immersion on",
        "server": "9abb00aef19ebed9",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [
            "f2c3a754b3fb3db2e9264f33aa096cc4"
        ],
        "entityId": [
            "switch.frient_immersion_switch_on_off"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [
            {
                "property": "immersion",
                "propertyType": "flow",
                "value": "on",
                "valueType": "str"
            }
        ],
        "queue": "none",
        "x": 1710,
        "y": 680,
        "wires": [
            [
                "115f26f0be0b4708"
            ]
        ]
    },
    {
        "id": "925710ad6c1f3a4c",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "Force immersion ON",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 830,
        "y": 680,
        "wires": [
            [
                "9ca850e36b147615",
                "661069883157c5d8"
            ]
        ]
    },
    {
        "id": "36b4a319115a6fbe",
        "type": "api-call-service",
        "z": "07b8b9c1ab058a4b",
        "name": "Turn immersion off",
        "server": "9abb00aef19ebed9",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [
            "f2c3a754b3fb3db2e9264f33aa096cc4"
        ],
        "entityId": [
            "switch.frient_immersion_switch_on_off"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [
            {
                "property": "immersion",
                "propertyType": "flow",
                "value": "off",
                "valueType": "str"
            }
        ],
        "queue": "none",
        "x": 1570,
        "y": 840,
        "wires": [
            [
                "e1e104f8aae61ce9",
                "4505287956560db2"
            ]
        ]
    },
    {
        "id": "a6941fb12e455bf2",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "Force immersion OFF",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 840,
        "y": 820,
        "wires": [
            [
                "83ed4f1217dca428"
            ]
        ]
    },
    {
        "id": "83ed4f1217dca428",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "Set off timer",
        "rules": [
            {
                "t": "set",
                "p": "immersionOffTime",
                "pt": "flow",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 860,
        "wires": [
            [
                "48d78eb1485299e5"
            ]
        ]
    },
    {
        "id": "0ff8e4c0d4ed0c51",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "Check 'off' delay",
        "property": "currentTime",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "prevTime",
                "vt": "msg"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1280,
        "y": 720,
        "wires": [
            [
                "661069883157c5d8"
            ],
            [
                "78cb813bea1d6266"
            ]
        ]
    },
    {
        "id": "9ca850e36b147615",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "Update current time",
        "rules": [
            {
                "t": "set",
                "p": "currentTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "prevTime",
                "pt": "msg",
                "to": "immersionOffTime",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 720,
        "wires": [
            [
                "0ff8e4c0d4ed0c51"
            ]
        ]
    },
    {
        "id": "4505287956560db2",
        "type": "function",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "func": "msg.previousTime = msg.payload + 3600000\n// add an hour to delay next immersion 'on'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 940,
        "wires": [
            [
                "9cab90dcf4f05990"
            ]
        ]
    },
    {
        "id": "115f26f0be0b4708",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "ON",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "currentTime",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 680,
        "wires": []
    },
    {
        "id": "e1e104f8aae61ce9",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "OFF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1790,
        "y": 840,
        "wires": []
    },
    {
        "id": "78cb813bea1d6266",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "ON delayed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "currentTime",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 760,
        "wires": []
    },
    {
        "id": "9cab90dcf4f05990",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "immersionOffTime",
                "pt": "flow",
                "to": "previousTime",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1740,
        "y": 980,
        "wires": [
            [
                "2f1c34f1ab37544c"
            ]
        ]
    },
    {
        "id": "9525b2fc1acc3897",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "Save GE data",
        "rules": [
            {
                "t": "set",
                "p": "GE",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 300,
        "wires": [
            [
                "b9d9bc33bf4d92c6",
                "b66c36cee7a300e4"
            ]
        ]
    },
    {
        "id": "3c7b1fa9304d4c26",
        "type": "function",
        "z": "07b8b9c1ab058a4b",
        "name": "Combine GE and forecast data",
        "func": "var combinedData = { data: msg.GE, result: msg.payload.result }\nmsg.payload = combinedData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 560,
        "wires": [
            [
                "6b9aa19e9e75d558",
                "aaa647d065064d73"
            ]
        ]
    },
    {
        "id": "5e3e187dc22ab22b",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Probably stll heating",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 960,
        "wires": []
    },
    {
        "id": "f113175251d6f212",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "If something else is generating > 2,000 load it doesn't really matter as the thermostat will operate",
        "info": "",
        "x": 950,
        "y": 1000,
        "wires": []
    },
    {
        "id": "4a81410923b29a98",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "968b84a11c2b83e0"
            ],
            [
                "dfa3725cba051db1"
            ]
        ]
    },
    {
        "id": "dfa3725cba051db1",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Forecast failed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "statusCode",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 480,
        "wires": []
    },
    {
        "id": "307edd7fbd63d915",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Immersion state error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 960,
        "wires": []
    },
    {
        "id": "0953f876a07f0bb7",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "Battery charged enough?",
        "property": "SoC",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "100",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 720,
        "wires": [
            [
                "5e8648ed17c470be"
            ]
        ]
    },
    {
        "id": "a8cef4aa66067b4f",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "Set power demand LOW",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 730,
        "y": 120,
        "wires": [
            [
                "8d1afaa3339f10d3"
            ]
        ]
    },
    {
        "id": "8d1afaa3339f10d3",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "powerDemand",
                "pt": "flow",
                "to": "500",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2f02cf940971e31b",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "Set power demand HIGH",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1350,
        "y": 120,
        "wires": [
            [
                "6a9b9ae89c33d6ce"
            ]
        ]
    },
    {
        "id": "6a9b9ae89c33d6ce",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "powerDemand",
                "pt": "flow",
                "to": "1000",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "bd6b5d39c6584fda",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "Initialise immersion state",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "7a547571d0bbb37d",
                "a06adcc217df71dd"
            ]
        ]
    },
    {
        "id": "7a547571d0bbb37d",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "Set OFF by default",
        "rules": [
            {
                "t": "set",
                "p": "immersion",
                "pt": "flow",
                "to": "off",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "immersionOffTime",
                "pt": "flow",
                "to": "",
                "tot": "date"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1270,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a06adcc217df71dd",
        "type": "api-call-service",
        "z": "07b8b9c1ab058a4b",
        "name": "Turn immersion off",
        "server": "9abb00aef19ebed9",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [
            "f2c3a754b3fb3db2e9264f33aa096cc4"
        ],
        "entityId": [
            "switch.frient_immersion_switch_on_off"
        ],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1270,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "bb7354b050b87b3e",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "OR",
        "info": "",
        "x": 1150,
        "y": 120,
        "wires": []
    },
    {
        "id": "9948a5df7ad19366",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "THEN",
        "info": "",
        "x": 830,
        "y": 180,
        "wires": []
    },
    {
        "id": "0c90b3f6301991af",
        "type": "subflow:04078e243164b50e",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "x": 800,
        "y": 300,
        "wires": [
            [
                "9525b2fc1acc3897"
            ]
        ]
    },
    {
        "id": "f798333d4aa61f50",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "On holiday",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 380,
        "wires": [
            [
                "deae05bcbd70559a"
            ]
        ]
    },
    {
        "id": "8f9c23eb12a5d155",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "Default is \"at home\"",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1610,
        "y": 180,
        "wires": [
            [
                "4e2c354a7ad624cc"
            ]
        ]
    },
    {
        "id": "4e2c354a7ad624cc",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "holiday",
                "pt": "flow",
                "to": "no",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1820,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "edef4452192973fc",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "On holiday?",
        "property": "holiday",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "no",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "yes",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 290,
        "y": 300,
        "wires": [
            [
                "67c3660acbc48e1f"
            ],
            [],
            []
        ]
    },
    {
        "id": "8baa7b1217ae5928",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "AND",
        "info": "",
        "x": 1430,
        "y": 180,
        "wires": []
    },
    {
        "id": "c8e0d48a52e36747",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "Add a HA button instead... when support v2021.12",
        "info": "",
        "x": 1430,
        "y": 460,
        "wires": []
    },
    {
        "id": "3257a93cb2eba438",
        "type": "api-get-history",
        "z": "07b8b9c1ab058a4b",
        "name": "Immersion Switch History",
        "server": "9abb00aef19ebed9",
        "version": 0,
        "startdate": "",
        "enddate": "",
        "entityid": "switch.frient_immersion_switch_on_off",
        "entityidtype": "is",
        "useRelativeTime": false,
        "relativeTime": "",
        "flatten": true,
        "output_type": "array",
        "output_location_type": "msg",
        "output_location": "payload",
        "x": 210,
        "y": 1100,
        "wires": [
            [
                "e1245f8edb0fa085",
                "4e55b616e723385c"
            ]
        ]
    },
    {
        "id": "e1245f8edb0fa085",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 450,
        "y": 1160,
        "wires": []
    },
    {
        "id": "4e55b616e723385c",
        "type": "function",
        "z": "07b8b9c1ab058a4b",
        "name": "Check for \"stuck on\"",
        "func": "// Check the gap between \"on\" and \"off\", or between \"on\" and the\n// end of the history array. If longer than an hour there's a\n// problem (stuck \"on)\")\nconst instance = {\n    \"entity_id\": \"switch.frient_immersion_switch_on_off\",\n    \"state\":\"off\",\n    \"attributes\": {\n        \"friendly_name\":\"Frient immersion switch on_off\"\n    },\n    \"last_changed\":\"2022-04-21T14:14:11.472747+00:00\",\n    \"last_updated\":\"2022-04-21T14:14:11.472747+00:00\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 1100,
        "wires": [
            [
                "4f0c708f10da95c7"
            ]
        ]
    },
    {
        "id": "4f0c708f10da95c7",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "If \"stuck\"",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "stuck",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 740,
        "y": 1100,
        "wires": [
            [
                "beb2a70f7f069d25"
            ]
        ]
    },
    {
        "id": "beb2a70f7f069d25",
        "type": "api-call-service",
        "z": "07b8b9c1ab058a4b",
        "name": "Immersion stuck \"on\"",
        "server": "9abb00aef19ebed9",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "mobile_app_g8441",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"Immersion stuck on\",\"data\":{\"type\":\"announce\"},\"target\":\"mobile_app_g8441\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 960,
        "y": 1100,
        "wires": [
            [
                "952cfb874f981e86",
                "83ed4f1217dca428"
            ]
        ]
    },
    {
        "id": "952cfb874f981e86",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "STUCK",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 1100,
        "wires": []
    },
    {
        "id": "deae05bcbd70559a",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "holiday",
                "pt": "flow",
                "to": "yes",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 380,
        "wires": [
            [
                "8c083dd37d595ead"
            ]
        ]
    },
    {
        "id": "d9965e8a6f51c78c",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "At home",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1300,
        "y": 420,
        "wires": [
            [
                "e07a0632a66c5a4d"
            ]
        ]
    },
    {
        "id": "e07a0632a66c5a4d",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "holiday",
                "pt": "flow",
                "to": "no",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 420,
        "wires": [
            [
                "06b4a5dece261f1e"
            ]
        ]
    },
    {
        "id": "8c083dd37d595ead",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Holiday",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 380,
        "wires": []
    },
    {
        "id": "06b4a5dece261f1e",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Home",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 420,
        "wires": []
    },
    {
        "id": "72a567cd9e07269a",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "https://api.carbonintensity.org.uk/",
        "props": [
            {
                "p": "url",
                "v": "https://api.carbonintensity.org.uk/",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "b3034e4b02336cda"
            ]
        ]
    },
    {
        "id": "b3034e4b02336cda",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "Set URL",
        "rules": [
            {
                "t": "set",
                "p": "CO2intensityAPIURL",
                "pt": "global",
                "to": "url",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "a0bdca2fe903891f",
        "type": "poll-state",
        "z": "07b8b9c1ab058a4b",
        "name": "Fetch CO2 intensity",
        "server": "9abb00aef19ebed9",
        "version": 2,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "updateinterval": "1",
        "updateIntervalType": "num",
        "updateIntervalUnits": "hours",
        "outputinitially": false,
        "outputonchanged": false,
        "entity_id": "sensor.co2_intensity",
        "state_type": "num",
        "halt_if": "",
        "halt_if_type": "num",
        "halt_if_compare": "is",
        "outputs": 1,
        "x": 190,
        "y": 1380,
        "wires": [
            [
                "2c3ceb0a19014a0c",
                "dbb207736134a469"
            ]
        ]
    },
    {
        "id": "2c3ceb0a19014a0c",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "CO2 threshold check",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "gasEF",
                "vt": "flow"
            },
            {
                "t": "eq",
                "v": "unavailable",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "NaN",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 440,
        "y": 1380,
        "wires": [
            [
                "27b7712b97dab068",
                "447241e5b9c8e0bf"
            ],
            [
                "20d81735ebefc242"
            ],
            [
                "20d81735ebefc242"
            ],
            [
                "84ae632e321b2e10"
            ]
        ]
    },
    {
        "id": "94e16f6f758c35d0",
        "type": "function",
        "z": "07b8b9c1ab058a4b",
        "name": "Check if immersion has been off a long time",
        "func": "// calc 24 hours on from the last Off time in msec\nconst longTimeSinceImmersionOn = msg.offTime + (24 * 3600 * 1000)\nconst currentTime = msg.currentTime\nlet timeData = {}\nif (currentTime > longTimeSinceImmersionOn) {\n    timeData.msg = \"forceOn\"\n} else {\n    timeData.msg = \"Immersion was on recently, even tho CO2 is low\"\n}\ntimeData.currentTime = Math.round(currentTime / 1000)\ntimeData.offTime = Math.round(msg.offTime / 1000)\ntimeData.longTimeSinceOn = Math.round(longTimeSinceImmersionOn / 1000)\nmsg.payload = timeData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 1380,
        "wires": [
            [
                "f63baafdfbefd68e",
                "c954fa63758b88f3"
            ]
        ]
    },
    {
        "id": "fa5e4b651a7cd103",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "Get the time",
        "rules": [
            {
                "t": "set",
                "p": "currentTime",
                "pt": "msg",
                "to": "",
                "tot": "date"
            },
            {
                "t": "set",
                "p": "offTime",
                "pt": "msg",
                "to": "immersionOffTime",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 1380,
        "wires": [
            [
                "94e16f6f758c35d0"
            ]
        ]
    },
    {
        "id": "f63baafdfbefd68e",
        "type": "switch",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "property": "payload.msg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "forceOn",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1490,
        "y": 1380,
        "wires": [
            [
                "9ca850e36b147615",
                "661069883157c5d8",
                "83fa208134293f4a"
            ],
            [
                "6ac736f2f839e5bf"
            ]
        ]
    },
    {
        "id": "20d81735ebefc242",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Failed to get CO2 data",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 1500,
        "wires": []
    },
    {
        "id": "83fa208134293f4a",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "time data - force ON",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1340,
        "wires": []
    },
    {
        "id": "d5a7e0f5a70dadb2",
        "type": "inject",
        "z": "07b8b9c1ab058a4b",
        "name": "Gas EF (gCO2e/kWh)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "215",
        "payloadType": "num",
        "x": 1620,
        "y": 280,
        "wires": [
            [
                "adc5af820940f297"
            ]
        ]
    },
    {
        "id": "adc5af820940f297",
        "type": "change",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "gasEF",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b53d8c6c8a75cf59",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "Set the grid CO2 threshold",
        "info": "",
        "x": 1610,
        "y": 240,
        "wires": []
    },
    {
        "id": "27b7712b97dab068",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Low grid CO2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 1320,
        "wires": []
    },
    {
        "id": "dbb207736134a469",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 1300,
        "wires": []
    },
    {
        "id": "84ae632e321b2e10",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "CO2 too high",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 1560,
        "wires": []
    },
    {
        "id": "7842e492556ad323",
        "type": "comment",
        "z": "07b8b9c1ab058a4b",
        "name": "Check the grid CO2 value, if is low and immersion's been off a while - turn it on",
        "info": "",
        "x": 350,
        "y": 1240,
        "wires": []
    },
    {
        "id": "2f1c34f1ab37544c",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Set OFF time variable",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1040,
        "wires": []
    },
    {
        "id": "6ac736f2f839e5bf",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "time data - stays OFF",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1720,
        "y": 1400,
        "wires": []
    },
    {
        "id": "68376fee89f7fb8c",
        "type": "humanizer",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "input": "",
        "x": 1350,
        "y": 1520,
        "wires": [
            [
                "4d4a896c19e98986"
            ]
        ]
    },
    {
        "id": "c954fa63758b88f3",
        "type": "function",
        "z": "07b8b9c1ab058a4b",
        "name": "",
        "func": "msg.payload = msg.payload.offTime - msg.payload.currentTime\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1180,
        "y": 1520,
        "wires": [
            [
                "68376fee89f7fb8c"
            ]
        ]
    },
    {
        "id": "4d4a896c19e98986",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "time difference",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1520,
        "y": 1520,
        "wires": []
    },
    {
        "id": "447241e5b9c8e0bf",
        "type": "time-range-switch",
        "z": "07b8b9c1ab058a4b",
        "name": "Avoid peak time",
        "lat": "",
        "lon": "",
        "startTime": "16:00",
        "endTime": "20:00",
        "startOffset": 0,
        "endOffset": 0,
        "x": 700,
        "y": 1380,
        "wires": [
            [
                "ef4c5deca417b6e4"
            ],
            [
                "fa5e4b651a7cd103"
            ]
        ]
    },
    {
        "id": "ef4c5deca417b6e4",
        "type": "debug",
        "z": "07b8b9c1ab058a4b",
        "name": "Low CO2 but avoiding peak time",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 1320,
        "wires": []
    },
    {
        "id": "9abb00aef19ebed9",
        "type": "server",
        "name": "Home Assistant",
        "version": 2,
        "addon": false,
        "rejectUnauthorizedCerts": false,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": "30"
    }
]